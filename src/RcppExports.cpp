// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rnormESGcpp
NumericMatrix rnormESGcpp(const int N, const int M);
RcppExport SEXP ESGtoolkit_rnormESGcpp(SEXP NSEXP, SEXP MSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const int >::type N(NSEXP );
        Rcpp::traits::input_parameter< const int >::type M(MSEXP );
        NumericMatrix __result = rnormESGcpp(N, M);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// rOUESGcpp
NumericMatrix rOUESGcpp(const int N, const int horizon, const double Delta, const double x0, NumericVector theta, NumericMatrix eps);
RcppExport SEXP ESGtoolkit_rOUESGcpp(SEXP NSEXP, SEXP horizonSEXP, SEXP DeltaSEXP, SEXP x0SEXP, SEXP thetaSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const int >::type N(NSEXP );
        Rcpp::traits::input_parameter< const int >::type horizon(horizonSEXP );
        Rcpp::traits::input_parameter< const double >::type Delta(DeltaSEXP );
        Rcpp::traits::input_parameter< const double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type eps(epsSEXP );
        NumericMatrix __result = rOUESGcpp(N, horizon, Delta, x0, theta, eps);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// rOUESGcppexact
NumericMatrix rOUESGcppexact(const int N, const int horizon, const double Delta, const double x0, NumericVector theta, NumericMatrix eps);
RcppExport SEXP ESGtoolkit_rOUESGcppexact(SEXP NSEXP, SEXP horizonSEXP, SEXP DeltaSEXP, SEXP x0SEXP, SEXP thetaSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const int >::type N(NSEXP );
        Rcpp::traits::input_parameter< const int >::type horizon(horizonSEXP );
        Rcpp::traits::input_parameter< const double >::type Delta(DeltaSEXP );
        Rcpp::traits::input_parameter< const double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type eps(epsSEXP );
        NumericMatrix __result = rOUESGcppexact(N, horizon, Delta, x0, theta, eps);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// rCIRESGcpp
NumericMatrix rCIRESGcpp(const int N, const int horizon, const double Delta, const double x0, NumericVector theta, NumericMatrix eps);
RcppExport SEXP ESGtoolkit_rCIRESGcpp(SEXP NSEXP, SEXP horizonSEXP, SEXP DeltaSEXP, SEXP x0SEXP, SEXP thetaSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const int >::type N(NSEXP );
        Rcpp::traits::input_parameter< const int >::type horizon(horizonSEXP );
        Rcpp::traits::input_parameter< const double >::type Delta(DeltaSEXP );
        Rcpp::traits::input_parameter< const double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type eps(epsSEXP );
        NumericMatrix __result = rCIRESGcpp(N, horizon, Delta, x0, theta, eps);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// rCIRESGcppexact
NumericMatrix rCIRESGcppexact(const int N, const int horizon, const double Delta, const double x0, NumericVector theta, NumericMatrix eps);
RcppExport SEXP ESGtoolkit_rCIRESGcppexact(SEXP NSEXP, SEXP horizonSEXP, SEXP DeltaSEXP, SEXP x0SEXP, SEXP thetaSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const int >::type N(NSEXP );
        Rcpp::traits::input_parameter< const int >::type horizon(horizonSEXP );
        Rcpp::traits::input_parameter< const double >::type Delta(DeltaSEXP );
        Rcpp::traits::input_parameter< const double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type eps(epsSEXP );
        NumericMatrix __result = rCIRESGcppexact(N, horizon, Delta, x0, theta, eps);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// rGBMESGcpp
NumericMatrix rGBMESGcpp(const int N, const int horizon, const double Delta, const double x0, NumericMatrix theta1, NumericMatrix theta2, NumericMatrix eps);
RcppExport SEXP ESGtoolkit_rGBMESGcpp(SEXP NSEXP, SEXP horizonSEXP, SEXP DeltaSEXP, SEXP x0SEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP epsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const int >::type N(NSEXP );
        Rcpp::traits::input_parameter< const int >::type horizon(horizonSEXP );
        Rcpp::traits::input_parameter< const double >::type Delta(DeltaSEXP );
        Rcpp::traits::input_parameter< const double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type theta1(theta1SEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type theta2(theta2SEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type eps(epsSEXP );
        NumericMatrix __result = rGBMESGcpp(N, horizon, Delta, x0, theta1, theta2, eps);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// rGBMjumpsnormESGcpp
NumericMatrix rGBMjumpsnormESGcpp(const int N, const int horizon, const double Delta, const double x0, NumericMatrix theta1, NumericMatrix theta2, const double lambda, const double mu, const double sigma, NumericMatrix eps);
RcppExport SEXP ESGtoolkit_rGBMjumpsnormESGcpp(SEXP NSEXP, SEXP horizonSEXP, SEXP DeltaSEXP, SEXP x0SEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP lambdaSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const int >::type N(NSEXP );
        Rcpp::traits::input_parameter< const int >::type horizon(horizonSEXP );
        Rcpp::traits::input_parameter< const double >::type Delta(DeltaSEXP );
        Rcpp::traits::input_parameter< const double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type theta1(theta1SEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type theta2(theta2SEXP );
        Rcpp::traits::input_parameter< const double >::type lambda(lambdaSEXP );
        Rcpp::traits::input_parameter< const double >::type mu(muSEXP );
        Rcpp::traits::input_parameter< const double >::type sigma(sigmaSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type eps(epsSEXP );
        NumericMatrix __result = rGBMjumpsnormESGcpp(N, horizon, Delta, x0, theta1, theta2, lambda, mu, sigma, eps);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// rGBMjumpskouESGcpp
NumericMatrix rGBMjumpskouESGcpp(const int N, const int horizon, const double Delta, const double x0, NumericMatrix theta1, NumericMatrix theta2, const double lambda, const double eta_up, const double eta_down, const double p, NumericMatrix eps);
RcppExport SEXP ESGtoolkit_rGBMjumpskouESGcpp(SEXP NSEXP, SEXP horizonSEXP, SEXP DeltaSEXP, SEXP x0SEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP lambdaSEXP, SEXP eta_upSEXP, SEXP eta_downSEXP, SEXP pSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const int >::type N(NSEXP );
        Rcpp::traits::input_parameter< const int >::type horizon(horizonSEXP );
        Rcpp::traits::input_parameter< const double >::type Delta(DeltaSEXP );
        Rcpp::traits::input_parameter< const double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type theta1(theta1SEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type theta2(theta2SEXP );
        Rcpp::traits::input_parameter< const double >::type lambda(lambdaSEXP );
        Rcpp::traits::input_parameter< const double >::type eta_up(eta_upSEXP );
        Rcpp::traits::input_parameter< const double >::type eta_down(eta_downSEXP );
        Rcpp::traits::input_parameter< const double >::type p(pSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type eps(epsSEXP );
        NumericMatrix __result = rGBMjumpskouESGcpp(N, horizon, Delta, x0, theta1, theta2, lambda, eta_up, eta_down, p, eps);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// TAGcorecpp
NumericVector TAGcorecpp(NumericVector sim, NumericVector sj_down, NumericVector sj_up, const int n, const int p);
RcppExport SEXP ESGtoolkit_TAGcorecpp(SEXP simSEXP, SEXP sj_downSEXP, SEXP sj_upSEXP, SEXP nSEXP, SEXP pSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type sim(simSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type sj_down(sj_downSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type sj_up(sj_upSEXP );
        Rcpp::traits::input_parameter< const int >::type n(nSEXP );
        Rcpp::traits::input_parameter< const int >::type p(pSEXP );
        NumericVector __result = TAGcorecpp(sim, sj_down, sj_up, n, p);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
